import * as THREE from '../../build/three.module.js'
import { scene,camera,renderer } from './light.js'
import{controls} from './render.js'
import {  addlabel,AClabel ,labelRenderer} from './tempeture.js'
import { LineMaterial } from '../jsm/lines/LineMaterial.js';
import{LineGeometry}from '../jsm/lines/LineGeometry.js'
import { GUI } from '../jsm/libs/dat.gui.module.js'
import { GLTFLoader } from '../jsm/loaders/GLTFLoader.js'
     
      import {
        CSS2DObject,
      } from '../jsm/renderers/CSS2DRenderer.js'
import { LineSegments2 } from '../jsm/lines/LineSegments2.js';
   

      const params = {
        twoFEquipment: false,
        enableFoor2: true,
        enableDevie: true,
      }
     
      var id2 = "nanjingnanBuilding_2F"; 

          // 单击模型数组   //预选模型数组//可双击的数组
      var granaryArr = [],JIGUI=[],DoubleArr=[],points=[]
      
      var label = null,flyPipe,slope
    

    
      const arr0=[
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, 235),
        new THREE.Vector3(-90, 110, 235),
        new THREE.Vector3(-97, 110, 250),
      ]

      const arr14=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, 230),
        new THREE.Vector3(-40, 110, 230),
        new THREE.Vector3(-48, 110, 245),
      ]

      const arr13=[
        new THREE.Vector3(-243, 110, 260),
       
        // new THREE.Vector3(-143, 110, 230),
        new THREE.Vector3(10, 110, 250),
        new THREE.Vector3(9.5, 110, 265),
      ]
      const arr12=[
       
        new THREE.Vector3(-243, 110, 260),
        new THREE.Vector3(60, 110, 240),
        new THREE.Vector3(59.5, 110, 255),
      ]
     
      const arr11=[
       
        new THREE.Vector3(-243, 110, 260),
        new THREE.Vector3(110, 110, 240),
        new THREE.Vector3(109.5, 110, 255),
      ]
      const arr10=[
       
        new THREE.Vector3(-243, 110, 260),
        new THREE.Vector3(170, 110, 240),
        new THREE.Vector3(168, 110, 255),
      ]
      const arr9=[
       
        new THREE.Vector3(-243, 110, 290),
        new THREE.Vector3(-90, 110, 330),
        new THREE.Vector3(-90, 110, 315),
      ]
      const arr8=[
        new THREE.Vector3(-243, 110, 290),
        new THREE.Vector3(-50, 110, 330),
        new THREE.Vector3(-52.5, 110, 320),
      ]
      const arr7=[
       
        new THREE.Vector3(-243, 110, 290),
        new THREE.Vector3(0, 110, 330),
        new THREE.Vector3(-2.5, 110, 321),
      ]
      const arr6=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, -130),
        new THREE.Vector3(-90, 110, -130),
        new THREE.Vector3(-94, 110, -120),
      ]
      const arr5=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, -130),
        new THREE.Vector3(-30, 110, -130),
        new THREE.Vector3(-35, 110, -120),
      ]
      const arr=[new THREE.Vector3(-243, 110, 260),  new THREE.Vector3(-243, 110, 260),]
      const arr4=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, -130),
        new THREE.Vector3(175, 110, -130),
        new THREE.Vector3(165.5, 110, -120),
      ]
      
      const arr3=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, -30),
        new THREE.Vector3(75, 110, -30),
        new THREE.Vector3(65.5, 110, -40),
      ]
      const arr2=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, -30),
        new THREE.Vector3(120, 110, -30),
        new THREE.Vector3(109.5, 110, -40),
      ]
      const arr1=[
       
        new THREE.Vector3(-243, 110, -260),
        new THREE.Vector3(-143, 110, -260),
        new THREE.Vector3(-143, 110, -30),
        new THREE.Vector3(180, 110, -30),
        new THREE.Vector3(168, 110, -40),
      ]


      var loader = new GLTFLoader()
      loader.load(
        '../models/NanJingNanBuilding/NanJingNanBuilding_2F.gltf',
        function (obj) {
          obj.scene.traverse(function (child) {
            if (child.isMesh) {
              child.castShadow = true
              child.receiveShadow = true
            }
          })
         
          obj.scene.position.x = +60
          obj.scene.position.z = +85
          obj.scene.position.y = 110
          scene.add(obj.scene) 
          console.log('object.scene: ', obj.scene)
          addlabel();


          // 所有独立的设备
          var a= scene.getChildByName('2F_DTE')
          a.traverse(function (mesh) {
            if (mesh.isMesh) {
              JIGUI.push(mesh)
            }
          })

            // 可以透明的机柜
          var IGarr = scene.getObjectByName('2F_Opacity_JG')
          IGarr.traverse(function (mesh) {
            if (mesh.isMesh) {
              DoubleArr.push(mesh)
              JIGUI.push(mesh)
              granaryArr.push(mesh)

            }
          })

          // 可以单击的设备以及机柜
          var Arr = scene.getObjectByName('2F_Click')
          Arr.traverse(function (mesh) {
            if (mesh.isMesh) {
              granaryArr.push(mesh)
            }
          })



        }
      )
//



      var tag = document.getElementById('label')
      label = new CSS2DObject(tag)
      tag.style.pointerEvents = 'none' //避免HTML标签遮挡三维场景的鼠标事件
      scene.add(label)

      

      function showlabel(mesh) {
        label.element.style.visibility = 'visible'
      }


      var chooseMesh,timeout,DoublechooseMesh
      // 单击事件
      function choose(event) {

        clearTimeout(timeout) //单击事件，清理定时器
        //设置定时器
        timeout = setTimeout(function () {
        if (chooseMesh) {
          AClabel.element.style.visibility = 'hidden' //显示标签
          // label.element.style.visibility = 'hidden';
        }

        var Sx = event.clientX //鼠标单击位置横坐标
        var Sy = event.clientY //鼠标单击位置纵坐标
        //屏幕坐标转WebGL标准设备坐标
        var x = (Sx / window.innerWidth) * 2 - 1 //WebGL标准设备横坐标
        var y = -(Sy / window.innerHeight) * 2 + 1 //WebGL标准设备纵坐标
        //创建一个射线投射器`Raycaster`
        var raycaster = new THREE.Raycaster()
        //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray
        raycaster.setFromCamera(new THREE.Vector2(x, y), camera)
        //返回.intersectObjects()参数中射线选中的网格模型对象
        // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素
        var intersects = raycaster.intersectObjects(granaryArr)
        //console.log("射线投射器返回的对象 点point", intersects[0].point);
        //   console.log("射线投射器的对象 几何体",intersects[0].object.geometry.vertices)
        //   intersects.length大于0说明，说明选中了模型
        if (intersects.length > 0) {
          chooseMesh = intersects[0].object
          console.log('chooseMesh: ', chooseMesh);
         
     
          var AClabelname = document.getElementById('AClabelname')
         
          if(  chooseMesh.material.opacity <1){
          
            chooseMesh.material.transparent = true
            chooseMesh.material.opacity = 1
        
           }else  if(chooseMesh.parent.name == '2F_Opacity_JG'){
          
            chooseMesh.material.transparent = true
            chooseMesh.material.opacity = 0.1
        
           }else if(chooseMesh.name=='Emerson01'){  
            AClabelname.innerText="1#佳力图空调"
            changeURL('62')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="Emerson02"){
            AClabelname.innerText="2#佳力图空调"
            changeURL('63')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="Emerson03"){
            AClabelname.innerText="3#佳力图空调"
            changeURL('71')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="Emerson04"){
            AClabelname.innerText="4#世图兹空调"
            changeURL('72')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="Emerson05"){
            AClabelname.innerText="5#世图兹空调"
            changeURL('101')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="2F_UPS01"){
            AClabelname.innerText="usp1"
            changeURL('111')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="2F_Coulometer02"){
            AClabelname.innerText="2#电量仪"
            changeURL('51')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="2F_Coulometer01"){
            AClabelname.innerText="1#电量仪"
            changeURL('52')
            showktlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C01-BMC-1-SWNJDTH3C-S5560S"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D02-BMC-2-SWNJDTH3C-S5560S"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D03-CRH-SWNJDTH3C-S6800"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D04-CRH-SWNJDTH3C-S6800"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D03-VM-SWNJDTH3C-S6800"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D04-VM-SWNJDTH3C-S6800"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D03-TB-SWNJDTH3C-S6520X"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D04-TB-SWNJDTH3C-S6520X"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="FC_EMC_DS6620"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="FC_EMC_DS6620_01"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="HuiYiFuWuQi"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="HuiYiFuWuQi002"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="HuiYiFuWuQi003"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D03-1-WZ-NJDTSXF-GAP1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-D04-2-WZ-NJDTSXF-GAP1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="AC-1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="AC-1000_01"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C02-1-VPNNJDTSXF-VPN1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C03-2-VPNNJDTSXF-VPN1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C02-1-FWNJDTSXF-AF1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C03-2-FWNJDTSXF-AF1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C02-1-FWNJDTSXF-AF2000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C03-2-FWNJDTSXF-AF2000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C02-1-WAFNJDTAH-V3"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C03-2-WAFNJDTAH-V3"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C02-1-LBNJDTSXF-AD1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C03-2-LBNJDTSXF-AD1000"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="FuWuQiFuZaiJunHeng"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="FuWuQiFuZaiJunHeng001"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C02-SWNJDTH3C-S12508G-AF"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }else if(chooseMesh.name=="NZ-C03-SWNJDTH3C-S12508G-AF"){
            addline(chooseMesh)
            changeURL(chooseMesh.name)
            showlabel(chooseMesh)
          }
        }
      }, 200)
      }

      addEventListener('click', choose) // 监听窗口鼠标单击事件,鼠标单击选中某个国家Mesh

//双击事件
function ChangeView(){
  clearTimeout(timeout) //单击事件，清理定时器
  console.log('DoublechooseMesh: ', DoublechooseMesh);
  if (DoublechooseMesh!==undefined) {

    if(DoublechooseMesh.name=='2F_JG07'||DoublechooseMesh.name=='2F_JG08'||DoublechooseMesh.name=='2F_JG09'||DoublechooseMesh.name=='2F_JG01'||DoublechooseMesh.name=='2F_JG02'||DoublechooseMesh.name=='2F_JG03'){
      moveup(DoublechooseMesh,100)
    }else{
      moveup(DoublechooseMesh,-42)
    }
 
  }

  var Sx = event.clientX //鼠标单击位置横坐标
  var Sy = event.clientY //鼠标单击位置纵坐标
  //屏幕坐标转WebGL标准设备坐标
  var x = (Sx / window.innerWidth) * 2 - 1 //WebGL标准设备横坐标
  var y = -(Sy / window.innerHeight) * 2 + 1 //WebGL标准设备纵坐标
  //创建一个射线投射器`Raycaster`
  var raycaster = new THREE.Raycaster()
  //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray
  raycaster.setFromCamera(new THREE.Vector2(x, y), camera)
  //返回.intersectObjects()参数中射线选中的网格模型对象
  // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素
  var intersects = raycaster.intersectObjects(DoubleArr)

  //   intersects.length大于0说明，说明选中了模型
  if (intersects.length > 0) {
    DoublechooseMesh = intersects[0].object
    
     if(DoublechooseMesh.name == '2F_JG00'){
    slope = -0.02
      createcurve(arr0)
     
      controls.target.set(-90, 110, 400)
      controls.update();
      moveup(DoublechooseMesh,100)
      
  
     }else if(DoublechooseMesh.name == '2F_JG01'){
      slope =-0.02
      createcurve(arr1)
      controls.target.set(180,80,-200)
      controls.update();
      moveup(DoublechooseMesh,-42)
  
     }else if(DoublechooseMesh.name == '2F_JG02'){
      slope =-0.02
      createcurve(arr2)
      controls.target.set(130,80,-200)
      controls.update();
      moveup(DoublechooseMesh,-42)
     }else if(DoublechooseMesh.name == '2F_JG03'){
      slope =-0.02
      createcurve(arr3)
      controls.target.set(66.5, 110-0.02, -39)
      controls.update();
       moveup(DoublechooseMesh,-42)
     }else if(DoublechooseMesh.name == '2F_JG04'){
      slope =-0.02
      createcurve(arr4)
      controls.target.set(171.4, 110-0.02, -119)
      controls.update();
       moveup(DoublechooseMesh,100)
     }else if(DoublechooseMesh.name == '2F_JG05'){
      slope =0.01
      createcurve(arr5)
      controls.target.set(-34, 110.01, -119)
      controls.update();
       moveup(DoublechooseMesh,100)
     }else if(DoublechooseMesh.name == '2F_JG06'){
      slope =+0.01
      createcurve(arr6)
      controls.target.set(-93, 110.01, -119)
      controls.update();
       moveup(DoublechooseMesh,100)
     }else if(DoublechooseMesh.name == '2F_JG07'){
      slope =-0.01
      createcurve(arr7)
      controls.target.set(10,110,150)
      controls.update();
      moveup(DoublechooseMesh,-42)
     }else  if(DoublechooseMesh.name == '2F_JG08'){
      slope =-0.01
      createcurve(arr8)
      controls.target.set(-40,80,150)
      controls.update();
       moveup(DoublechooseMesh,-42)
     }else  if(DoublechooseMesh.name == '2F_JG09'){
      slope =0.01
      createcurve(arr9)
      controls.target.set(-90,80,150)
      controls.update();
       moveup(DoublechooseMesh,-42)
     }else  if(DoublechooseMesh.name == '2F_JG10'){
      slope =-0.02
      createcurve(arr10)
      controls.target.set(160,80,400)
      controls.update();
       moveup(DoublechooseMesh,100)
     }else  if(DoublechooseMesh.name == '2F_JG11'){
      slope =-0.01
      createcurve(arr11)
      controls.target.set(110,80,400)
      controls.update();
       moveup(DoublechooseMesh,100)
     }else  if(DoublechooseMesh.name == '2F_JG12'){
      slope =0
      createcurve(arr12)
      controls.target.set(60,80,400)
      controls.update();
      moveup(DoublechooseMesh,100)
     }else  if(DoublechooseMesh.name == '2F_JG13'){
      slope =0
      createcurve(arr13)
      controls.target.set(10,80,400)
      controls.update();
      moveup(DoublechooseMesh,100)
     }else  if(DoublechooseMesh.name == '2F_JG14'){
      slope =-0.02
      createcurve(arr14)
      controls.target.set(-40,80,400)
      controls.update();
      moveup(DoublechooseMesh,100)
     }
   
  }
}




// var box = new THREE.BoxGeometry(10, 10, 10) //创建一个立方体几何对象
// var material = new THREE.MeshLambertMaterial({
//   color: 0x0000ff,
// }) //材质对象
// var boxMesh = new THREE.Mesh(box, material) //网格模型对象
// boxMesh.position.set(171.4, 110-0.02, -119)
// scene.add(boxMesh)

addEventListener('click', choose) // 监听窗口鼠标

addEventListener('dblclick',ChangeView);



addEventListener('pointermove',changeopcity);


function changeopcity(){

  if (chooseMesh) {
    chooseMesh.material.emissive.set(0x000000)
    }


    var Sx = event.clientX //鼠标单击位置横坐标
    var Sy = event.clientY //鼠标单击位置纵坐标
    //屏幕坐标转WebGL标准设备坐标
    var x = (Sx / window.innerWidth) * 2 - 1 //WebGL标准设备横坐标
    var y = -(Sy / window.innerHeight) * 2 + 1 //WebGL标准设备纵坐标
    //创建一个射线投射器`Raycaster`
    var raycaster = new THREE.Raycaster()
    //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray
    raycaster.setFromCamera(new THREE.Vector2(x, y), camera)
    //返回.intersectObjects()参数中射线选中的网格模型对象
    // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素
    var intersects = raycaster.intersectObjects(JIGUI)
  
    //   intersects.length大于0说明，说明选中了模型
    if (intersects.length > 0) {
      chooseMesh = intersects[0].object
      chooseMesh.material.emissive.set(0x33FFFF)
    }

}

  





      //坐标系
      // var axesHelper = new THREE.AxesHelper(300)

      // scene.add(axesHelper)

      

      
      //界面
      const gui = new GUI()
      var findmesh = null
      var line1 = null
      gui
        .add(params, 'twoFEquipment')
        .name('内部')
        .onChange((e) => {
          var mesh = scene.getObjectByName('2F_Opacity_JG')

          if (e == true) {
            mesh.children.forEach(function(mesh){
              mesh.material.transparent = true
            mesh.material.opacity = 0.1

            })
            
          } else {
            mesh.children.forEach(function(mesh){
              mesh.material.transparent = true
            mesh.material.opacity = 1

            })
            
          }
        })
       
      var name = {
        nanjingnan: function () {
          window.location.href = './webgl_loader_gltf_njn.html'
        },
        Map: function () {
          window.location.href = './Map.html'
        },
        数据库审计: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)

            findmesh = scene.getObjectByName('NZ-C01-DBANJDTAH-DBAuditor')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('NZ-C01-DBANJDTAH-DBAuditor')
            addline(findmesh)
          }
        },
        日志审计: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('NZ-C01-RZSJNJDTTRX-TopAudit')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('NZ-C01-RZSJNJDTTRX-TopAudit')
            addline(findmesh)
          }
        },
        Vplexvs6: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('Vplexvs6')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('Vplexvs6')
            addline(findmesh)
          }
        },
        堡垒机: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('BaoLeiJi')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('BaoLeiJi')
            addline(findmesh)
          }
        },
        EmcUnityXT680: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('EmcUnityXT680')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('EmcUnityXT680')
            addline(findmesh)
          }
        },
        EmcUnityXT680扩容后: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('EmcUnityXT680KuoRongHou')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('EmcUnityXT680KuoRongHou')
            addline(findmesh)
          }
        },
        IBMV7000: function () {
          // 同步透明
          showopty()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('IBMV7000')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('IBMV7000')
            addline(findmesh)
          }
        },
        关闭设备详情: function () {
          label.element.style.visibility = 'hidden'
        },
      }
      gui.add(name, 'Map').name('首页')
      gui.add(name, 'nanjingnan').name('返回')
      gui.add(name, '关闭设备详情')
      gui.add(name, '堡垒机')
      gui.add(name, '日志审计')
      gui.add(name, '数据库审计')
      gui.add(name, 'Vplexvs6')
      gui.add(name, 'IBMV7000')
      gui.add(name, 'EmcUnityXT680')
      gui.add(name, 'EmcUnityXT680扩容后')

      // 默认值设置
      var dropdown = { 存储节点华三R4900G3: '未选' }
      //选项
      var states = [
        '001',
        '002',
        '003',
        '004',
        '005',
        '006',
        '007',
        '008',
        '009',
        '010',
        '未选',
      ]
      // 添加
      var clipCtrl = gui.add(dropdown, '存储节点华三R4900G3').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        if (mesh == '001') {
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_00')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_00')
            addline(findmesh)
          }
        } else if (mesh == '002') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_001')
          addline(findmesh)
        } else if (mesh == '003') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_002')
          addline(findmesh)
        } else if (mesh == '004') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_003')
          addline(findmesh)
        } else if (mesh == '005') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_004')
          addline(findmesh)
        } else if (mesh == '006') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_005')
          addline(findmesh)
        } else if (mesh == '007') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_006')
          addline(findmesh)
        } else if (mesh == '008') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_007')
          addline(findmesh)
        } else if (mesh == '009') {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_008')
          addline(findmesh)
        } else {
          deleline(findmesh)
          findmesh = scene.getObjectByName('CunChuJieDianHuaSanR4900G3_009')
          addline(findmesh)
        }
      })

      var dropdown = { 超融合华三R4900G3: '未选' }
      //选项
      var states = [
        '001',
        '002',
        '003',
        '004',
        '005',
        '006',
        '007',
        '008',
        '009',
        '010',
        '011',
        '012',
        '未选',
      ]
      // 添加
      var clipCtrl = gui.add(dropdown, '超融合华三R4900G3').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_13')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_13')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_014')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_014')
              addline(findmesh)
            }
            break
          case '003':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_015')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_015')
              addline(findmesh)
            }
            break
          case '004':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_016')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_016')
              addline(findmesh)
            }
            break
          case '005':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_017')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_017')
              addline(findmesh)
            }
            break
          case '006':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_018')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_018')
              addline(findmesh)
            }
            break
          case '007':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_019')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_019')
              addline(findmesh)
            }
            break
          case '008':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_020')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_020')
              addline(findmesh)
            }
            break
          case '009':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_021')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_020')
              addline(findmesh)
            }
            break
          case '010':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_022')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_022')
              addline(findmesh)
            }
            break
          case '011':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_023')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_023')
              addline(findmesh)
            }
            break
          case '012':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_024')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ChaoRongHeHuaSanR4900G3_024')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 管理交换机S5560S: '未选' }
      //选项
      var states = ['001', '002', '003', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '管理交换机S5560S').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C01-BMC-1-SWNJDTH3C-S5560S')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C01-BMC-1-SWNJDTH3C-S5560S')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D02-BMC-2-SWNJDTH3C-S5560S')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D02-BMC-2-SWNJDTH3C-S5560S')
              addline(findmesh)
            }
            break
          case '003':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('JiaoHuanJiS5560_03')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('JiaoHuanJiS5560_03')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 服务器交换机S6800: '未选' }
      //选项
      var states = ['001', '002', '003', '004', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '服务器交换机S6800').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D03-CRH-SWNJDTH3C-S6800')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D03-CRH-SWNJDTH3C-S6800')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D04-CRH-SWNJDTH3C-S6800')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D04-CRH-SWNJDTH3C-S6800')
              addline(findmesh)
            }
            break
          case '003':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D03-VM-SWNJDTH3C-S6800')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D03-VM-SWNJDTH3C-S6800')
              addline(findmesh)
            }
            break
          case '004':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D04-VM-SWNJDTH3C-S6800')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D04-VM-SWNJDTH3C-S6800')
              addline(findmesh)
            }
            break
        }
      })
      var dropdown = { 同步交换机S6520X: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '同步交换机S6520X').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D03-TB-SWNJDTH3C-S6520X')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D03-TB-SWNJDTH3C-S6520X')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D04-TB-SWNJDTH3C-S6520X')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D04-TB-SWNJDTH3C-S6520X')
              addline(findmesh)
            }
            break
        }
      })
      var dropdown = { FC_EMC_D6620: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'FC_EMC_D6620').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('FC_EMC_DS6620')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('FC_EMC_DS6620')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('FC_EMC_DS6620_01')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('FC_EMC_DS6620_01')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 会议服务器: '未选' }
      //选项
      var states = ['001', '002', '003', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '会议服务器').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('HuiYiFuWuQi')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('HuiYiFuWuQi')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('HuiYiFuWuQi002')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('HuiYiFuWuQi002')
              addline(findmesh)
            }
            break
          case '003':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('HuiYiFuWuQi003')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('HuiYiFuWuQi003')
              addline(findmesh)
            }
            break
        }
      })
      var dropdown = { 网闸: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '网闸').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D03-1-WZ-NJDTSXF-GAP1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D03-1-WZ-NJDTSXF-GAP1000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-D04-2-WZ-NJDTSXF-GAP1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-D04-2-WZ-NJDTSXF-GAP1000')
              addline(findmesh)
            }
            break
        }
      })
      var dropdown = { AC_1000: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'AC_1000').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('AC-1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('AC-1000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('AC-1000_01')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('AC-1000_01')
              addline(findmesh)
            }
            break
        }
      })
      var dropdown = { VPN_1000: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'VPN_1000').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C02-1-VPNNJDTSXF-VPN1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C02-1-VPNNJDTSXF-VPN1000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C03-2-VPNNJDTSXF-VPN1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C03-2-VPNNJDTSXF-VPN1000')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { AF_1000: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'AF_1000').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C02-1-FWNJDTSXF-AF1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C02-1-FWNJDTSXF-AF1000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C03-2-FWNJDTSXF-AF1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C03-2-FWNJDTSXF-AF1000')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { AF_2000: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'AF_2000').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C02-1-FWNJDTSXF-AF2000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C02-1-FWNJDTSXF-AF2000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C03-2-FWNJDTSXF-AF2000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C03-2-FWNJDTSXF-AF2000')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 安恒WAF: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '安恒WAF').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C02-1-WAFNJDTAH-V3')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C02-1-WAFNJDTAH-V3')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C03-2-WAFNJDTAH-V3')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C03-2-WAFNJDTAH-V3')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 南站负载: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '南站负载').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C02-1-LBNJDTSXF-AD1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C02-1-LBNJDTSXF-AD1000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C03-2-LBNJDTSXF-AD1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C03-2-LBNJDTSXF-AD1000')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 服务器负载均衡: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '服务器负载均衡').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('FuWuQiFuZaiJunHeng')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('FuWuQiFuZaiJunHeng')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('FuWuQiFuZaiJunHeng001')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('FuWuQiFuZaiJunHeng001')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 核心交换机: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '核心交换机').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        showopty()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C02-SWNJDTH3C-S12508G-AF')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C02-SWNJDTH3C-S12508G-AF')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('NZ-C03-SWNJDTH3C-S12508G-AF')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('NZ-C03-SWNJDTH3C-S12508G-AF')
              addline(findmesh)
            }
            break
        }
      })


      function showktlabel(chooseMesh){
        AClabel.element.style.visibility = 'visible' //显示标签
        AClabel.position.copy(chooseMesh.getWorldPosition())
        AClabel.position.z =chooseMesh.getWorldPosition().z-130;
        AClabel.position.y =50;
      }

     //  添加单独设备线框
     function addline(findmesh) {
      console.log("进入线框添加");
      var edges = new THREE.EdgesGeometry(findmesh.geometry)
      var geometry = new LineGeometry();
      geometry.fromEdgesGeometry(edges)
      // 3. 创建 LineMaterial，设置颜色和线宽
      var material = new LineMaterial({
          color: 0x31deef,
          linewidth: 4
      })
      // 4. 设置材质分辨率
      material.resolution.set(window.innerWidth, window.innerHeight);
      // 5. 创建 Line2
      var line = new LineSegments2(geometry, material);
      // line.scale.set(810,810,810)
      line.name = 'line'
      line.position.copy(findmesh.getWorldPosition())  
      scene.add(line) 
    }
    // 添加线框
    // 添加线框
    function addline1(findmesh) {
      var edges = new THREE.EdgesGeometry(findmesh.geometry)
      var geometry = new LineGeometry();
      geometry.fromEdgesGeometry(edges)
      // 3. 创建 LineMaterial，设置颜色和线宽
      var material = new LineMaterial({
          color: 0x31deef,
          linewidth: 4
      })
      // 4. 设置材质分辨率
      material.resolution.set(window.innerWidth, window.innerHeight);
      // 5. 创建 Line2
      var line = new LineSegments2(geometry, material);
      // line.scale.set(810,810,810)
      line.name = 'line1'
      line.position.copy(findmesh.getWorldPosition())
      scene.add(line)
    }
    // 删除线框方法
    function deleline(findmesh) {
      var line = scene.getObjectByName('line')
      // console.log('line: ', line);
      scene.remove(line)
    }

    function deleline1() {
      var line1 = scene.getObjectByName('line1')
      console.log('line1: ', line1);

      scene.remove(line1)
    }
      // 使外部透明化，以便于观看
      function showopty() {
        var a = scene.getObjectByName('2F_Opacity_JG')

        a.children.forEach(function (mesh) {
        

          mesh.material.transparent = true
          mesh.material.opacity = 0.1
        })
      }

      function moveup(mesh,num) {
        var pos = mesh.getWorldPosition()
        var tween = new TWEEN.Tween(pos)
        console.log("运行");
        tween.to(
          {
            z: pos.z+num,
          },
          3000
        )
        tween.onUpdate(function () {
          mesh.position.z = pos.z
        })
        tween.start()
      }
     
      var num = 0
      var R  =10
      function createcurve(arr, num) {
        var curve = new THREE.CurvePath()
        // 从曲线上获得501个顶点，数量根据需要自己设置
        // var points = curve.getPoints(6000);
        for (var i = 0; i < arr.length - 1; i++) {
          if (i == 0) {
            var dir = arr[0].clone().sub(arr[1])
            dir.normalize()
            var p2 = arr[1].clone()
            p2.add(dir.clone().multiplyScalar(R))
            var line = new THREE.LineCurve3(arr[0], p2)
            curve.curves.push(line)
          } else {
            // 计算三个点构成的两条线的方向
            var dir1 = arr[i - 1].clone().sub(arr[i])
            dir1.normalize()
            var dir2 = arr[i + 1].clone().sub(arr[i])
            dir2.normalize()
            var p12_ = arr[i].clone()
            p12_.add(dir1.clone().multiplyScalar(R))
            var p1 = arr[i].clone().add(dir1.clone().multiplyScalar(R))
            var p2 = arr[i].clone()
            var p3 = arr[i].clone().add(dir2.clone().multiplyScalar(R))
            var beziercurve = new THREE.QuadraticBezierCurve3(p1, p2, p3)
            var line1 = arr[i].clone()
            line1.add(dir2.clone().multiplyScalar(R))
            var line2 = arr[i + 1].clone()
            if (i < arr.length - 2) {
              //最后一段不用减掉半径尺寸
              line2.add(dir2.clone().multiplyScalar(-R))
            }
            var line = new THREE.LineCurve3(line1, line2)
            // 把转换曲线和直线插入曲线中
            curve.curves.push(beziercurve, line)
          }
        }
        points = curve.getSpacedPoints(3000)

        flyPipe=true
      }

      var curve = new THREE.CurvePath()
      // 从曲线上获得501个顶点，数量根据需要自己设置
      // var points = curve.getPoints(6000);
      for (var i = 0; i < arr.length - 1; i++) {
        if (i == 0) {
          var dir = arr[0].clone().sub(arr[1])
          dir.normalize()
          var p2 = arr[1].clone()
          p2.add(dir.clone().multiplyScalar(R))
          var line = new THREE.LineCurve3(arr[0], p2)
          curve.curves.push(line)
        } else {
          // 计算三个点构成的两条线的方向
          var dir1 = arr[i - 1].clone().sub(arr[i])
          dir1.normalize()
          var dir2 = arr[i + 1].clone().sub(arr[i])
          dir2.normalize()
          var p12_ = arr[i].clone()
          p12_.add(dir1.clone().multiplyScalar(R))
          var p1 = arr[i].clone().add(dir1.clone().multiplyScalar(R))
          var p2 = arr[i].clone()
          var p3 = arr[i].clone().add(dir2.clone().multiplyScalar(R))
          var beziercurve = new THREE.QuadraticBezierCurve3(p1, p2, p3)
          var line1 = arr[i].clone()
          line1.add(dir2.clone().multiplyScalar(R))
          var line2 = arr[i + 1].clone()
          if (i < arr.length - 2) {
            //最后一段不用减掉半径尺寸
            line2.add(dir2.clone().multiplyScalar(-R))
          }
          var line = new THREE.LineCurve3(line1, line2)
          // 把转换曲线和直线插入曲线中
          curve.curves.push(beziercurve, line)
        }
      }
      points = curve.getSpacedPoints(3000)
// var curve = new THREE.CurvePath(arr)
// var points = curve.getPoints(1000);
var geometry = new THREE.BufferGeometry() //声明一个几何体对象Geometry
geometry.setFromPoints(points)
// 材质对象
var material = new THREE.LineBasicMaterial({
  color: 0xffff00,
  opacity: 0.5,
})
//线条模型对象
var line = new THREE.Line(geometry, material)
scene.add(line)


      function render() {
        // console.log(camera.position);
        TWEEN.update()
        renderer.render(scene, camera) //执行渲染操作
         labelRenderer.render(scene, camera) //CSS3D渲染
        
        // composer1.render()
        requestAnimationFrame(render) //请求再次执行渲染函数render，渲染下一帧
      if(flyPipe){

        if (num < points.length - 50) {
          var i = Math.floor(num)
          // 相机位置设置在当前点位置
          camera.position.set(points[i].x, points[i].y, points[i].z)
          
          // 设置相机观察点为当前点的下一个点，两点可以构成一个视线方向
          // 你可以简单理解为：要始终保持视线为曲线的切线方向
          camera.lookAt(
            new THREE.Vector3(
              points[i + 1].x,
              points[i].y + slope,
              points[i + 1].z
            )
          )
         
          num += 4 //调节速度
        } else {
          flyPipe = false
          num = 0
        }
      }
      
      
       
      }
      render()
      var message,URlSE;
var URl = "http://192.168.108.130:9090/njdt_yw_server/3d-view/get-wsd?type=3"
var URlTEST ="http://192.168.108.130:9090/njdt_yw_server/3d-view/get-device-info?deviceNo=S0E31&type=2"

$.ajax({
  type:'post',
      url: URl,
      data:message,
      dataType : 'json',
      async : false, //默认为true 异步
      success:function(data){
    message=data;
 
      },
     
  });
  // console.log('message: ', message);
  $().ready(function(){



$("#Tvalue1").text(message.data[0].data)

$("#Hvalue1").text(message.data[1].data)

$("#Tvalue2").text(message.data[2].data)

$("#Hvalue2").text(message.data[3].data)
$("#Tvalue3").text(message.data[4].data)

$("#Hvalue3").text(message.data[5].data)
$("#Tvalue4").text(message.data[6].data)

$("#Hvalue4").text(message.data[7].data)

  })


  var SE031msg
  $.extend({
  'chURL':function(num){
   
     URlSE= URlTEST.replace(/31/,num)
  //  console.log(' URl031.slice(-2).replace(num): ',  URlSE);
  },
 
 })

 function changeURL(num){
   $.chURL(num)   
 $.ajax({
   type:'post',
       url: URlSE,
       data:SE031msg,
       dataType : 'json',
       async : false, 
       success:function(data){
          
         SE031msg=data;
    

       },
      
   });
    //清空之前添加的数据
    $("#nr").html('')
    SE031msg.data.sort().reverse();
   $.each(SE031msg.data,function(iteam,index){
           
    if(index.latestValue == 0){

    }else{ 
    if(iteam%2==0){
  
      $("#nr").prepend(
      '<div class="TH_tagname_out">'+'<div class="TH_tagname" >'+index.tagName+
      '</div><div  class="TH_name_value">'+index.latestValue+'</div></div>')
      
    }else if(iteam%2==1){
      
      
      $("#nr").prepend(
      '<div  class="TH_name_out2">'+
        '<div class="TH_tagname"  >'+index.tagName+'</div>'+
        '<div  class="TH_name_value">'+index.latestValue+'</div></div>')
    }
  }
  })


  }



 