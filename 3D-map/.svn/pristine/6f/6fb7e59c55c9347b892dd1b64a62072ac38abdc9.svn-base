import * as THREE from '../../build/three.module.js'
import { scene,camera } from './light.js'
import {  addlabel  ,AClabel } from './tempeture.js'
      import { GUI } from '../jsm/libs/dat.gui.module.js'
      import { GLTFLoader } from '../jsm/loaders/GLTFLoader.js'
     
      import {
        CSS2DObject,
      } from '../jsm/renderers/CSS2DRenderer.js'
   
      const params = {
        HuaWei: false,
        enableFoor2: true,
        enableDevie: true,
      }
      
     


      var granaryArr = []
      var Arr = []
      var label, URlSE


      var URl = "http://192.168.108.130:9090/njdt_yw_server/3d-view/get-wsd?type=1"
      var URlTEST ="http://192.168.108.130:9090/njdt_yw_server/3d-view/get-device-info?deviceNo=S0E31&type=1"
     
        
      var loader = new GLTFLoader()
      loader.load(
        '../models/NanJingMetroBuilding/NanJingMetroBuilding_5F.gltf',
        function (object) {
         
          object.scene.traverse(function (child) {
            if (child.isMesh) {
              child.castShadow = true
              child.receiveShadow = true
            }
          })

          object.scene.scale.set(800,800,800)
          object.scene.position.y = -400*3.5
          object.scene.position.x = +340*4
          object.scene.position.z = +280*4+100

          scene.add(object.scene)
          addlabel();
          var Arr = scene.getObjectByName('5F_DTP')
          console.log('Arr: ', Arr)
       
          Arr.children.forEach(function (mesh) {
            if (mesh.isMesh) {
              granaryArr.push(mesh)
            }
          })
          console.log('object.scene: ', object.scene)
         
        }
      )
     
      var tag = document.getElementById('label')

      label = new CSS2DObject(tag)

      tag.style.pointerEvents = 'none' //避免HTML标签遮挡三维场景的鼠标事件
      scene.add(label)

      var chooseMesh = null

      function choose(event) {
        if (chooseMesh) {
          AClabel.element.style.visibility = 'hidden' //显示标签
          // label.element.style.visibility = 'hidden';
        }

        var Sx = event.clientX //鼠标单击位置横坐标
        var Sy = event.clientY //鼠标单击位置纵坐标
        //屏幕坐标转WebGL标准设备坐标
        var x = (Sx / window.innerWidth) * 2 - 1 //WebGL标准设备横坐标
        var y = -(Sy / window.innerHeight) * 2 + 1 //WebGL标准设备纵坐标
        //创建一个射线投射器`Raycaster`
        var raycaster = new THREE.Raycaster()
        //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray
        raycaster.setFromCamera(new THREE.Vector2(x, y), camera)
        //返回.intersectObjects()参数中射线选中的网格模型对象
        // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素
        var intersects = raycaster.intersectObjects(granaryArr)
        //console.log("射线投射器返回的对象 点point", intersects[0].point);
        //   console.log("射线投射器的对象 几何体",intersects[0].object.geometry.vertices)
        //   intersects.length大于0说明，说明选中了模型
        if (intersects.length > 0) {
          chooseMesh = intersects[0].object
          console.log(' chooseMesh: ',  chooseMesh);
          //chooseMesh.material.color.set(0x000000);//选中改变颜色，这样材质颜色贴图.map和color颜色会相乘
          AClabel.element.style.visibility = 'visible' //显示标签
          AClabel.position.copy(chooseMesh.getWorldPosition())
          AClabel.position.z =chooseMesh.getWorldPosition().z-130;
          AClabel.position.y =50;
          var AClabelname = document.getElementById('AClabelname')
            if(chooseMesh.name=='5F_UPS01'){  
              AClabelname.innerHTML="1#UPS"
              changeURL("11")
            
            }else if(chooseMesh.name=="5F_UPS02"){
              AClabelname.innerHTML="2#UPS"
              changeURL("12")
             
            }else if(chooseMesh.name=="5F_Air-Conditioning01"){
              AClabelname.innerHTML="艾默生空调"
              changeURL("31")
            
           
            }else if(chooseMesh.name=="5F_Air-Conditioning"){
              AClabelname.innerHTML="佳力图空调"
              changeURL("61")
            
            }

        }
      }

      addEventListener('click', choose) // 监听窗口鼠标单击事件,鼠标单击选中某个国家Mesh
    

      
  
      //界面
      const gui = new GUI()
      var name = {
        lingshan: function () {
          window.location.href = './webgl_loader_gltf_njMetro.html'
        },
        Map: function () {
          window.location.href = './Map.html'
        },
        EMC_DD6300: function () {
           // 同步透明
        opacity()
          //展示标签
          showlabel()
          if (findmesh != null) {
            deleline(findmesh)
            findmesh = scene.getObjectByName('EMC_DD6300')
            addline(findmesh)
          } else {
            findmesh = scene.getObjectByName('EMC_DD6300')
            addline(findmesh)
          }
        },
        关闭设备详情: function () {
          label.element.style.visibility = 'hidden'
        },
      }
      gui.add(name, 'Map').name('首页')
      gui.add(name, 'lingshan').name('返回')
      gui.add(name, '关闭设备详情')
      gui.add(name, 'EMC_DD6300')
      var findmesh = null
      var line1 = null
      gui
        .add(params, 'HuaWei')
        .name('内部')
        .onChange((e) => {
          var inside = scene.getObjectByName('5F_JG')

          if (e == true) {
            
            inside.children.forEach(function (mesh) {
              mesh.material.transparent = true
              mesh.material.opacity = 0.1
            })
          } else {
            inside.children.forEach(function (mesh) {
              mesh.material.transparent = true
              mesh.material.opacity = 1
            })
          }
        })

      var dropdown = { 管理交换机S5130: '未选' }
      //选项
      var states = ['001', '002', '003', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '管理交换机S5130').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        opacity()
        //展示标签
        showlabel()

        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('JiaoHuanJiS5130')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('JiaoHuanJiS5130')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('JiaoHuanJiS5130_01')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('JiaoHuanJiS5130_01')
              addline(findmesh)
            }
            break
          case '003':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('JiaoHuanJiS5130_02')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('JiaoHuanJiS5130_02')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { H3C_WX3540H: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'H3C_WX3540H').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        opacity()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('H3C_WX3540H')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('H3C_WX3540H')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('H3C_WX3540H002')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('H3C_WX3540H002')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { AF_1000: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, 'AF_1000').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        opacity()
        //展示标签
        showlabel()
        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('AF-1000')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('AF-1000')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('AF-1000_01')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('AF-1000_01')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 灾备服务器: '未选' }
      //选项
      var states = ['001', '002', '003', '004', '005', '006', '007', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '灾备服务器').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        opacity()
        // 同步透明
        opacity()
        //展示标签
        showlabel()

        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_00')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_00')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_01')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_01')
              addline(findmesh)
            }
            break
          case '003':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_02')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_02')
              addline(findmesh)
            }
            break
          case '004':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_03')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_03')
              addline(findmesh)
            }
            break
          case '005':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_04')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_04')
              addline(findmesh)
            }
            break
          case '006':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_05')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_05')
              addline(findmesh)
            }
            break
          case '007':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_06')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('ZaiNanFuWuQi_06')
              addline(findmesh)
            }
            break
        }
      })

      var dropdown = { 核心交换机12508G_AF: '未选' }
      //选项
      var states = ['001', '002', '未选']
      // 添加
      var clipCtrl = gui.add(dropdown, '核心交换机12508G_AF').options(states)
      // 设置点击事件
      clipCtrl.onChange((mesh) => {
        // 同步透明
        opacity()
        //展示标签
        showlabel()

        switch (mesh) {
          case '001':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('HeXinJiaoHuanJi12508G-AF01')
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('HeXinJiaoHuanJi12508G-AF01')
              addline(findmesh)
            }
            break
          case '002':
            if (findmesh != null) {
              deleline(findmesh)
              findmesh = scene.getObjectByName('T_H01')
              console.log('findmesh: ', findmesh);
              addline(findmesh)
            } else {
              findmesh = scene.getObjectByName('HeXinJiaoHuanJi12508G-AF002')
              addline(findmesh)
            }
            break
        }
      })
      // 添加线框
      function addline(findmesh) {
        var edges = new THREE.EdgesGeometry(findmesh.geometry, 1)
        var edgesMaterial = new THREE.LineBasicMaterial({
          color: 0x31deef,
        })
        var line = new THREE.LineSegments(edges, edgesMaterial)
        line.name = 'line'
        findmesh.add(line)
      }
      // 删除线框方法
      function deleline(findmesh) {
        var line1 = scene.getObjectByName('line')

        findmesh.remove(line1)
      }
      // 展示标签--后期传数据调佣数据库填充
      function showlabel(mesh) {
        label.element.style.visibility = 'visible'
      }
      // 使外部透明化，以便于观看
      function opacity() {
        var inside = scene.getObjectByName('5F_JG')
        inside.children.forEach(function (mesh) {
          mesh.material.transparent = true
          mesh.material.opacity = 0.1
        })
      }
     
      var message;
    
     
      $.ajax({
        type:'post',
            url: URl,
            data:message,
            dataType : 'json',
            async : false, //默认为true 异步
            success:function(data){
               
              message=data;

            },
           
        });



        
        $().ready(function(){
      
      
      
      $("#Tvalue1").text(message.data[0].data)
      
      $("#Hvalue1").text(message.data[1].data)
      
      $("#Tvalue2").text(message.data[2].data)
      
      $("#Hvalue2").text(message.data[3].data)
      $("#Tvalue3").text(message.data[4].data)
      
      $("#Hvalue3").text(message.data[5].data)
      $("#Tvalue4").text(message.data[6].data)
      
      $("#Hvalue4").text(message.data[7].data)
      
        })


          var SE031msg
         $.extend({'SE031taglabel':function(){
          $("#tagName").text(SE031msg.data[0].tagName)
          $("#latestValue").text(SE031msg.data[0].latestValue)
          // $("#tname").text(SE031msg.data[1].tagName)
          // $("#tvalue").text(SE031msg.data[1].latestValue)
         },
         'chURL':function(num){
       
            URlSE= URlTEST.replace(/31/,num)
          console.log(' URl031.slice(-2).replace(num): ',  URlSE);
         },
        
        })

        function changeURL(num){
          $.chURL(num)   
        $.ajax({
          type:'post',
              url: URlSE,
              data:SE031msg,
              dataType : 'json',
              async : false, 
              success:function(data){
                 
                SE031msg=data;
                console.log('SE031msg: ', SE031msg);
  
              },
             
          });

          $.each(SE031msg.data,function(iteam,index){
           
           if(index.latestValue == 0){

           }else{

            if(iteam%2==0){
					
              $("#nr").prepend(
              '<div class="TH_tagname_out">'+'<div class="TH_tagname" >'+index.tagName+
              '</div><div  class="TH_name_value">'+index.latestValue+'</div></div>')
              
            }else if(iteam%2==1){
              
              
              $("#nr").prepend(
              '<div  class="TH_name_out2">'+
                '<div class="TH_tagname"  >'+index.tagName+'</div>'+
                '<div  class="TH_name_value">'+index.latestValue+'</div></div>')
            }



           }
           
          })

         }



        
       

