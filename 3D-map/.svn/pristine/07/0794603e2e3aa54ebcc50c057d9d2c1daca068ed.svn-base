import { scene } from './light.js'
import * as THREE from '../../build/three.module.js'
import { LineSegments2 } from '../jsm/lines/LineSegments2.js'
import { LineMaterial } from '../jsm/lines/LineMaterial.js'
import { LineGeometry } from '../jsm/lines/LineGeometry.js'
import { addlabel, AClabel, labelRenderer, CSSNameLAbel } from './tempeture.js'
//  添加单独设备线框
function addline(findmesh) {
  // console.log("进入线框添加");
  var edges = new THREE.EdgesGeometry(findmesh.geometry)
  var geometry = new LineGeometry()
  geometry.fromEdgesGeometry(edges)
  // 3. 创建 LineMaterial，设置颜色和线宽
  var material = new LineMaterial({
    color: 0x31deef,
    linewidth: 4,
  })
  // 4. 设置材质分辨率
  material.resolution.set(window.innerWidth, window.innerHeight)
  // 5. 创建 Line2
  var line = new LineSegments2(geometry, material)
  // line.scale.set(810,810,810)
  line.name = 'line'
  line.position.copy(findmesh.getWorldPosition())
  scene.add(line)
}

// 添加线框
function addline1(findmesh) {
  var edges = new THREE.EdgesGeometry(findmesh.geometry)
  var geometry = new LineGeometry()
  geometry.fromEdgesGeometry(edges)
  // 3. 创建 LineMaterial，设置颜色和线宽
  var material = new LineMaterial({
    color: 0x31deef,
    linewidth: 4,
  })
  // 4. 设置材质分辨率
  material.resolution.set(window.innerWidth, window.innerHeight)
  // 5. 创建 Line2
  var line = new LineSegments2(geometry, material)
  // line.scale.set(810,810,810)
  line.name = 'line1'
  line.position.copy(findmesh.getWorldPosition())
  scene.add(line)
}

// 删除线框方法
function deleline(findmesh) {
  var line = scene.getObjectByName('line')

  scene.remove(line)
}

function deleline1() {
  var line1 = scene.getObjectByName('line1')
  // console.log('line1: ', line1);

  scene.remove(line1)
}
// 展示标签--后期传数据调佣数据库填充
function showlabel(mesh) {
  Alabel.element.style.visibility = 'visible'
  // Alabel.element.style.animationName = 'ball'
  Alabel.position.copy(mesh.getWorldPosition())
  Alabel.scale.set(0.2, 0.2, 0.2)
  Alabel.position.z = mesh.getWorldPosition().z + 50
  Alabel.position.y = mesh.getWorldPosition().y + 10
}

function showDeptName(me) {
  CSSNameLAbel.element.style.visibility = 'visible'
  CSSNameLAbel.position.copy(me.getWorldPosition())
  CSSNameLAbel.scale.set(0.2, 0.2, 0.2)
}
//机柜移动动画
function moveup(mesh, num) {
  var pos = mesh.getWorldPosition()
  var tween = new TWEEN.Tween(pos)
  tween.to(
    {
      x: pos.x + num,
    },
    3000
  )
  tween.onUpdate(function () {
    mesh.position.x = pos.x
  })
  tween.start()
}

/**添加进入数组 */
function addArry(name, Arry) {
  var dept = scene.getObjectByName(name)
  dept.traverse(function (mesh) {
    if (mesh.isMesh) {
      Arry.push(mesh)
    }
  })
}
/**定位设备，机柜移动 */
function MoveOpacityMesh(JGname, num) {
  const JGMesh = scene.getObjectByName(JGname)
  JGMesh.material.opacity = 0.1
  JGMesh.material.transparent = true
  moveup(JGMesh, num)
}
var R = 20,
  points = []
/**跟着确定线路漫游 */
function createcurve(arr, num) {
  var curve = new THREE.CurvePath()
  // 从曲线上获得501个顶点，数量根据需要自己设置
  // var points = curve.getPoints(6000);
  for (var i = 0; i < arr.length - 1; i++) {
    if (i == 0) {
      var dir = arr[0].clone().sub(arr[1])
      dir.normalize()
      var p2 = arr[1].clone()
      p2.add(dir.clone().multiplyScalar(R))
      var line = new THREE.LineCurve3(arr[0], p2)
      curve.curves.push(line)
    } else {
      // 计算三个点构成的两条线的方向
      var dir1 = arr[i - 1].clone().sub(arr[i])
      dir1.normalize()
      var dir2 = arr[i + 1].clone().sub(arr[i])
      dir2.normalize()
      var p12_ = arr[i].clone()
      p12_.add(dir1.clone().multiplyScalar(R))
      var p1 = arr[i].clone().add(dir1.clone().multiplyScalar(R))
      var p2 = arr[i].clone()
      var p3 = arr[i].clone().add(dir2.clone().multiplyScalar(R))
      var beziercurve = new THREE.QuadraticBezierCurve3(p1, p2, p3)
      var line1 = arr[i].clone()
      line1.add(dir2.clone().multiplyScalar(R))
      var line2 = arr[i + 1].clone()
      if (i < arr.length - 2) {
        //最后一段不用减掉半径尺寸
        line2.add(dir2.clone().multiplyScalar(-R))
      }
      var line = new THREE.LineCurve3(line1, line2)
      // 把转换曲线和直线插入曲线中
      curve.curves.push(beziercurve, line)
    }
  }
  points = curve.getSpacedPoints(3000)
}

var dept, deptNameUrl, URlSE

var URlTEST =
  'http://192.168.108.130:9090/njdt_yw_server/3d-view/get-device-info?deviceNo=S0E31&type=1'
var deptURL =
  'http://221.6.30.202:15009/njdt_yw_server/network-equipment/get-zb-info?deviceNo=JiaoHuanJiS5130'

function addTemHUM(URl) {
  var message
  $.ajax({
    type: 'post',
    url: URl,
    data: message,
    dataType: 'json',
    async: false, //默认为true 异步
    success: function (data) {
      message = data
    },
  })
  $().ready(function () {
    $('#Tvalue1').text(message.data[0].data)

    $('#Hvalue1').text(message.data[1].data)

    $('#Tvalue2').text(message.data[2].data)

    $('#Hvalue2').text(message.data[3].data)
    $('#Tvalue3').text(message.data[4].data)

    $('#Hvalue3').text(message.data[5].data)
    $('#Tvalue4').text(message.data[6].data)

    $('#Hvalue4').text(message.data[7].data)
  })
}
// 温湿度获取数据

// 空调等设备弹出标签数据
var SE031msg
$.extend({
  SE031taglabel: function () {
    $('#tagName').text(SE031msg.data[0].tagName)
    $('#latestValue').text(SE031msg.data[0].latestValue)
    // $("#tname").text(SE031msg.data[1].tagName)
    // $("#tvalue").text(SE031msg.data[1].latestValue)
  },
  chURL: function (num) {
    URlSE = URlTEST.replace(/31/, num)
  },
  Change: function (name) {
    dept = deptURL.replace(/JiaoHuanJiS5130/, name)
  },
  Changename: function (name) {
    deptNameUrl = deptURL.replace(/JiaoHuanJiS5130/, name)
  },
})

function changeURL(num) {
  $.chURL(num)
  $.ajax({
    type: 'post',
    url: URlSE,
    data: SE031msg,
    dataType: 'json',
    async: false,
    success: function (data) {
      SE031msg = data
    },
  })
  $('#nr').html('')
  SE031msg.data.sort().reverse()

  $.each(SE031msg.data, function (iteam, index) {
    if (index.latestValue == 0) {
    } else {
      if (iteam % 2 == 0) {
        $('#nr').prepend(
          '<div class="TH_tagname_out">' +
            '<div class="TH_tagname" >' +
            index.tagName +
            '</div><div  class="TH_name_value">' +
            index.latestValue +
            '</div></div>'
        )
      } else if (iteam % 2 == 1) {
        $('#nr').prepend(
          '<div  class="TH_name_out2">' +
            '<div class="TH_tagname"  >' +
            index.tagName +
            '</div>' +
            '<div  class="TH_name_value">' +
            index.latestValue +
            '</div></div>'
        )
      }
    }
  })
}

// 独立设备

var deptdata
function exchageURL(name) {
  // console.log('dept: ', dept);
  $.Change(name)

  $.ajax({
    type: 'post',
    url: dept,

    data: deptdata,
    dataType: 'json',
    async: false,
    success: function (data) {
      deptdata = data
    },
  })
  if (deptdata.data == null) {
    $('#2Dname').text(0)
    $('#cpuPjLyl').text(0)
    $('#fsDbl').text(0)
    $('#xySj').text(0)
    $('#ttl').text(0)
    $('#ncLyl').text(0)
    $('#gbBl').text(0)
    $('#dbl').text(0)
    $('#fsGbBl').text(0)
    $('#ncLyl').text(0)
  } else {
    $('#2Dname').text(deptdata.data.deviceName)
    $('#cpuPjLyl').text(deptdata.data.cpuPjLyl)
    $('#fsDbl').text(deptdata.data.fsDbl)
    $('#xySj').text(deptdata.data.xySj)
    $('#ttl').text(deptdata.data.ttl)
    $('#ncLyl').text(deptdata.data.ncLyl)
    $('#gbBl').text(deptdata.data.gbBl)
    $('#dbl').text(deptdata.data.dbl)
    $('#fsGbBl').text(deptdata.data.fsGbBl)
    $('#ncLyl').text(deptdata.data.ncLyl)
  }
}

var deptName
function changenameURL(name) {
  $.Changename(name)

  $.ajax({
    type: 'post',
    url: deptNameUrl,

    data: deptName,
    dataType: 'json',
    async: false,
    success: function (data) {
      deptName = data
    },
  })
  console.log(deptName)

  $('#DeptName').text(deptName.data.deviceName)
}

export {
  addTemHUM,
  changeURL,
  changenameURL,
  exchageURL,
  MoveOpacityMesh,
  addArry,
  createcurve,
  moveup,
  showlabel,
  deleline,
  addline,
  showDeptName,
  points,
}
