import * as THREE from '../build/three.module.js'
import { EffectComposer } from '../jsm/postprocessing/EffectComposer.js'
import { RenderPass } from '../jsm/postprocessing/RenderPass.js'
import { FilmPass } from '../jsm/postprocessing/FilmPass.js'
import { BloomPass } from '../jsm/postprocessing/BloomPass.js'
import { ShaderPass } from '../jsm/postprocessing/ShaderPass.js'
import { FXAAShader } from '../jsm/shaders/FXAAShader.js'
import { CopyShader } from '../jsm/shaders/CopyShader.js'
import { GUI } from '../jsm/libs/dat.gui.module.js'

import {
  CSS3DRenderer,
  CSS3DObject,
  CSS3DSprite,
} from '../jsm/renderers/CSS3DRenderer.js'
import { UnrealBloomPass } from '../jsm/postprocessing/UnrealBloomPass.js'
import { scene, camera, renderer, controls, mixer, clock } from './scene.js'

import {
  setTime,
  deletetag,
  plane,
  addOtherLAbel,
  setTextrueMove,
  changeMaterial,
  AddMeshIntoArr,
  granaryArr,
  render,
} from './MainFuntion.js'

// import {
//   Dev,
//   MF,
//   LengQueLouPipe,
//   LengQueLouEquipmemt,
//   JiGuangLouPipe,
//   JiGuangLouEquipment,
//   LengShuiTa,
//   GongYiLengQueShuiPump,
//   ZLBianPingLengQueShuiJiZu,
//   ShuiLengLuoGanJiZu,
//   run,
//   out,
//   flycurrve,
//   outletopcity,
// } from './BTN.js'
var width = window.innerWidth //窗口宽度
var height = window.innerHeight //窗口高度

var chooseMesh = null //射线拾取的模型

var obj = document.getElementById('label')
var th = document.getElementById('TH')

var label = null

/**
 * 创建场景对象Scene
 */

// controls.target.set(nextPos);
// controls.update();

// onresize 事件会在窗口被调整大小时发生
window.onresize = function () {
  // 重置渲染器输出画布canvas尺寸
  renderer.setSize(window.innerWidth, window.innerHeight)
  // 全屏情况下：设置观察范围长宽比aspect为窗口宽高比
  camera.aspect = window.innerWidth / window.innerHeight
  // 渲染器执行render方法的时候会读取相机对象的投影矩阵属性projectionMatrix
  // 但是不会每渲染一帧，就通过相机的属性计算投影矩阵(节约计算资源)
  // 如果相机的一些属性发生了变化，需要执行updateProjectionMatrix ()方法更新相机的投影矩阵
  camera.updateProjectionMatrix()
}

//二号通风管道视线曲线

/**悬浮标签转为3D对象 */
var Deptlabel = document.getElementById('AHU')
var CSS3DDeptlabel = new CSS3DSprite(Deptlabel)
scene.add(CSS3DDeptlabel)

var luoganji = document.getElementById('luoganji')
var CSS3Dluoganjilabel = new CSS3DSprite(luoganji)
scene.add(CSS3Dluoganjilabel)

var timeout = null //引入定时器
function choose(event) {
  clearTimeout(timeout) //单击事件，清理定时器
  //设置定时器
  timeout = setTimeout(function () {
    var Sx = event.clientX //鼠标单击位置横坐标
    var Sy = event.clientY //鼠标单击位置纵坐标
    //屏幕坐标转WebGL标准设备坐标
    var x = (Sx / window.innerWidth) * 2 - 1 //WebGL标准设备横坐标

    var y = -(Sy / window.innerHeight) * 2 + 1 //WebGL标准设备纵坐标
    //创建一个射线投射器`Raycaster`
    var raycaster = new THREE.Raycaster()
    //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray
    raycaster.setFromCamera(new THREE.Vector2(x, y), camera)
    //返回.intersectObjects()参数中射线选中的网格模型对象
    // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素
    var intersects = raycaster.intersectObjects(granaryArr)

    // console.log("射线投射器返回的对象 点point", intersects[0].point);
    // console.log("射线投射器的对象 几何体",intersects[0].object.geometry.vertices)
    // intersects.length大于0说明，说明选中了模型
    if (intersects.length > 0) {
      // 选中模型变大
      // intersects[0].object.scale.set(1.5,1.5,1.5);
      chooseMesh = intersects[0].object
      // console.log('chooseMesh: ', chooseMesh)

      if (chooseMesh.parent.name == 'Aircondition_ALKO') {
        showmessaeg('modbusAhu1', 'modbusAhu1', 'AHU1', chooseMesh.parent)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.parent.name == 'Aircondition_ALKO01') {
        showmessaeg('modbusAhu2', 'modbusAhu2', 'AHU2', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.parent.name == 'Aircondition_ALKO02') {
        showmessaeg('modbusAhu3', 'modbusAhu3', 'AHU3', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.parent.name == 'Aircondition_ALKO03') {
        showmessaeg('modbusAhu4', 'modbusAhu4', 'AHU4', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.parent.name == 'Aircondition_ALKO04') {
        showmessaeg('modbusAhu5', 'modbusAhu5', 'AHU5', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.parent.name == 'Aircondition_ALKO05') {
        showmessaeg('modbusAhu6', 'modbusAhu6', 'AHU6', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.parent.name == 'Aircondition_ALKO06') {
        showmessaeg('modbusAhu7', 'modbusAhu7', 'AHU7', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.name == 'Aircondition_ALKO007') {
        showmessaeg('modbusAhu8', 'modbusAhu8', 'AHU8', chooseMesh)
        // ShowModbusAhuPipe(chooseMesh.parent.name + 'PIPE')
      } else if (chooseMesh.name == 'LQL_Equipment') {
        showLuoGanJiData(
          'modbusScrewMachine',
          'modbusScrewMachine1',
          '水冷螺杆机01',
          chooseMesh
        )
      } else if (chooseMesh.name == 'LQL_Equipment01') {
        showLuoGanJiData(
          'modbusScrewMachine',
          'modbusScrewMachine2',
          '水冷螺杆机02',
          chooseMesh
        )
      } else if (chooseMesh.name == 'LQL_Equipment02') {
        showLuoGanJiData(
          'modbusScrewMachine',
          'modbusScrewMachine3',
          '水冷螺杆机03',
          chooseMesh
        )
      } else if (chooseMesh.name == 'LengShuiTa') {
        showLQTmessaeg(
          'modbusCoolTower',
          'modbusCoolTower01',
          '冷水塔01',
          chooseMesh
        )
      } else if (chooseMesh.name == 'LengShuiTa01') {
        showLQTmessaeg(
          'modbusCoolTower',
          'modbusCoolTower02',
          '冷水塔02',
          chooseMesh
        )
      } else if (chooseMesh.name == 'LengShuiTa02') {
        showLQTmessaeg(
          'modbusCoolTower',
          'modbusCoolTower03',
          '冷水塔03',
          chooseMesh
        )
      } else if (chooseMesh.parent.name == 'ZLBianPingLengQueShuiJiZu_All') {
        showGYSWJmessaeg(
          'modbusCraftOuter',
          'modbusCraftOuter',
          '工艺冷却水外机',
          chooseMesh
        )
      } else if (chooseMesh.parent.name == 'GongYiLengQueShuiPump') {
        showmessaeg(
          'modbusCraftInner',
          'modbusCraftInner',
          '工艺冷却水泵',
          chooseMesh
        )
      }
    }
  }, 200)
}
addEventListener('click', choose) // 监听窗口鼠标单击事件

function onMouseDblclick(event) {
  clearTimeout(timeout) //单击事件，清理定时器

  var object = scene.getObjectByName('all')
  // console.log('onMouseDblclick -> object', object)

  var Sx = event.clientX //鼠标单击位置横坐标
  var Sy = event.clientY //鼠标单击位置纵坐标
  //屏幕坐标转WebGL标准设备坐标
  var x = (Sx / window.innerWidth) * 2 - 1 //WebGL标准设 备横坐标
  var y = -(Sy / window.innerHeight) * 2 + 1 //WebGL标准设备纵坐标
  //创建一个射线投射器`Raycaster`
  var raycaster = new THREE.Raycaster()
  //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray
  raycaster.setFromCamera(new THREE.Vector2(x, y), camera)
  //返回.intersectObjects()参数中射线选中的网格模型对象
  // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素
  var intersects = raycaster.intersectObjects(granaryArr)

  // console.log('射线器返回的对象', intersects)
  //console.log("射线投射器返回的对象 点point", intersects[0].point);
  //   console.log("射线投射器的对象 几何体",intersects[0].object.geometry.vertices)
  //   intersects.length大于0说明，说明选中了模型
  if (intersects.length > 0) {
    choosemesh = intersects[0].object

    if (choosemesh.name == 'JiGuangLouPipe01') {
      flyPipe = true //
      pipe = 1
    } else if (choosemesh.name == 'JiGuangLouPipe02') {
      createcurve(arr2, 5000)
      flyPipe = true //
      pipe = 2
    } else if (choosemesh.name == 'JiGuangLouPipe03') {
      createcurve(arr3, 5000)
      flyPipe = true //
      pipe = 3
    } else if (choosemesh.name == 'JiGuangLouPipe04') {
      createcurve(arr4, 5000)
      flyPipe = true //
      pipe = 4
    } else if (choosemesh.name == 'JiGuangLouPipe05') {
      createcurve(arr5)
      flyPipe = true //
      pipe = 5
    } else if (choosemesh.name == 'JiGuangLouPipe06') {
      createcurve(arr6, 5000)
      flyPipe = true //
      pipe = 6
    } else if (choosemesh.name == 'JiGuangLouPipe07') {
      createcurve(arr7, 5000)
      flyPipe = true //
      pipe = 7
    } else if (choosemesh.name == 'JiGuangLouPipe08') {
      createcurve(arr8, 5000)
      flyPipe = true //
      pipe = 8
    }
  }
}

addEventListener('dblclick', onMouseDblclick)

// renderer.autoClear = false
// var num = 0
// const renderModel = new RenderPass(scene, camera)
// const effectCopy = new ShaderPass(CopyShader)

// const effectBloom = new BloomPass(1.25)
// const effectFilm = new FilmPass(0.65, 0.8, 3, false)

// var composer = new EffectComposer(renderer)

// composer.addPass(renderModel)
// composer.addPass(effectBloom)
// composer.addPass(effectFilm)
// composer.addPass(effectCopy)

// const params = {
//   exposure: 1,
//   bloomStrength: 5,
//   bloomThreshold: 0,
//   bloomRadius: 0,
//   scene: 'Scene with Glow',
// }
// const gui = new GUI()

// gui
//   .add(params, 'scene', ['Scene with Glow', 'Glow only', 'Scene only'])
//   .onChange(function (value) {
//     switch (value) {
//       case 'Scene with Glow':
//         bloomComposer.renderToScreen = false
//         break
//       case 'Glow only':
//         bloomComposer.renderToScreen = true
//         break
//       case 'Scene only':
//         // nothing to do
//         break
//     }

//     // render()
//   })

// const folder = gui.addFolder('Bloom Parameters')

// folder.add(params, 'exposure', 0.1, 2).onChange(function (value) {
//   renderer.toneMappingExposure = Math.pow(value, 4.0)
//   render()
// })

// folder.add(params, 'bloomThreshold', 0.0, 1.0).onChange(function (value) {
//   bloomPass.threshold = Number(value)
//   render()
// })

// folder.add(params, 'bloomStrength', 0.0, 10.0).onChange(function (value) {
//   bloomPass.strength = Number(value)
//   render()
// })

// folder
//   .add(params, 'bloomRadius', 0.0, 1.0)
//   .step(0.01)
//   .onChange(function (value) {
//     bloomPass.radius = Number(value)
//     render()
//   })

const renderScene = new RenderPass(scene, camera)
var FXAAShaderPass = new ShaderPass(FXAAShader)
const effectFilm = new FilmPass(0.65, 0.8, 3, false)
const bloomPass = new UnrealBloomPass(
  new THREE.Vector2(window.innerWidth, window.innerHeight),
  1.5,
  0.4,
  0.85
)
bloomPass.threshold = 0
bloomPass.strength = 0.8
bloomPass.radius = 0

const bloomComposer = new EffectComposer(renderer)
bloomComposer.renderToScreen = false
bloomComposer.addPass(FXAAShaderPass)
bloomComposer.addPass(effectFilm)
bloomComposer.addPass(renderScene)
bloomComposer.addPass(bloomPass)

const finalPass = new ShaderPass(
  new THREE.ShaderMaterial({
    uniforms: {
      baseTexture: { value: null },
      bloomTexture: { value: bloomComposer.renderTarget2.texture },
    },
    vertexShader: document.getElementById('vertexshader').textContent,
    fragmentShader: document.getElementById('fragmentshader').textContent,
    defines: {},
  }),
  'baseTexture'
)
finalPass.needsSwap = true

const finalComposer = new EffectComposer(renderer)
finalComposer.addPass(renderScene)
finalComposer.addPass(finalPass)
// finalComposer.addPass(FXAAShaderPass)

render()

// function fly(points) {
//   if (num < points.length - 100) {
//     var i = Math.floor(num)
//     // 相机位置设置在当前点位置
//     camera.position.set(points[i].x, points[i].y, points[i].z)
//     // 设置相机观察点为当前点的下一个点，两点可以构成一个视线方向
//     // 你可以简单理解为：要始终保持视线为曲线的切线方向
//     camera.lookAt(
//       new THREE.Vector3(points[i + 1].x, points[i].y - 0.01, points[i + 1].z)
//     )
//     num += 4 //调节速度
//   } else {
//     flyPipe = false
//     num = 0
//   }
// }

var message
$.ajax({
  type: 'get',
  url: 'http://221.6.30.202:15006/prod-api/modbus/api/getNewestData?modbusType=modbusAhu1',
  data: message,
  dataType: 'json',
  async: false, //默认为true 异步
  success: function (data) {
    message = data
  },
})
var MessageUrl =
  'http://221.6.30.202:15006/prod-api/modbus/api/getNewestData?modbusType=modbusScrewMachine'
// var JsonURL = '../JiGuangLou_3D/json/modbusScrewMachine.json'
// var JsonURL = './json/modbusScrewMachine.json'
var modbusScrewMachine,
  changeMessageUrl,
  changeJsonUrl,
  modbusScrewMachine_message
$.extend({
  changeurl: function (messahename, jsonname) {
    changeMessageUrl = MessageUrl.replace(/modbusScrewMachine/, messahename)
    // changeJsonUrl = JsonURL.replace(/modbusScrewMachine/, jsonname)
  },
  AddData: function () {
    // console.log('11111111')
    // $.ajax({
    //   type: 'get',
    //   // url: changeJsonUrl,
    //   data: modbusScrewMachine_message,
    //   dataType: 'json',
    //   async: false, //默认为true 异步
    //   success: function (data) {
    //     modbusScrewMachine_message = data.infoWindowField
    //   },
    // })
    $.ajax({
      type: 'get',
      url: changeMessageUrl,
      data: modbusScrewMachine,
      dataType: 'json',
      async: false, //默认为true 异步
      success: function (data) {
        modbusScrewMachine = data.data[0]
        console.log(' modbusScrewMachine: ', modbusScrewMachine)
      },
    })

    setTimeout(function () {
      $.AddData()
    }, 240000)
  },
})

function showLuoGanJiData(name, jsonname, tname, HavingChooseMesh) {
  $.changeurl(name, jsonname)
  $.AddData()

  $('#AHU').html('')
  $('#AHU').append(
    ` 
    <div id="luoganji" class="luoganji_outClass">

    <div style="position: absolute; left: 0px; top: 0px">
      <img
      src="./img/luoganji/28136cd389bf4cc517cc7353b2def2b.jpg" 
        style=" opacity: 0.6"
      />
    </div>
    <h2 id="ktname" class="luoganji_name_class">AHU1</h2>
    
    <div  class="Luoganji_dataClass" >
         <div style="padding-top: 10px;padding-bottom: 10px;border-bottom:1px  groove rgba(255, 255, 255, 0.5);">  <a>冷却塔制冷: 
         ` +
      (modbusScrewMachine.coolTowerRefrigerationStatus == 0 ? '关' : '开') +
      `
         
         
         </a>&nbsp;&nbsp; <a>冷冻管道:   ` +
      (modbusScrewMachine.coolPipelineStatus == 0 ? '关' : '开') +
      `</a>   </div>
         <div style="padding-top: 10px;">  <a>冷冻水泵: ` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.coolWaterPumpRemoteStatus1
        : tname.search('2') >= 0
        ? modbusScrewMachine.coolWaterPumpRemoteStatus2
        : tname.search('3') >= 0
        ? modbusScrewMachine.coolWaterPumpRemoteStatus3
        : undefined) +
      `</a> &nbsp; &nbsp;&nbsp;&nbsp;<a>冷冻系统供回水压差:   ` +
      modbusScrewMachine.coolSystemReturn +
      ` P</a> </div>
      </div>
       
      <div  class="dept02Class">
         <a style="font-size: 14px;">压缩机<br>电流</a><br />
         <a >` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.compressorCurrent1
        : tname.search('2') >= 0
        ? modbusScrewMachine.compressorCurrent2
        : tname.search('3') >= 0
        ? modbusScrewMachine.compressorCurrent3
        : undefined) +
      `</a>
      </div>
      <div  class="dept01Class">
         <a style="font-size: 15px;" >冷冻系统</a><br />
         <a >出水:` +
      modbusScrewMachine.coolSystemOutPress +
      `P</a><br />
         <a >回水:` +
      modbusScrewMachine.coolSystemReturnPress +
      `P</a>
      </div>
      <div  class="dept03Class">
        <div  class=" "  style="padding-top: 29px;">
          <a style="font-size: 13px;">冷冻泵<br>频率</a><br />
          <a >` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.coolPumpHzFeedback1
        : tname.search('2') >= 0
        ? modbusScrewMachine.coolPumpHzFeedback2
        : tname.search('3') >= 0
        ? modbusScrewMachine.coolPumpHzFeedback3
        : undefined) +
      `HZ</a>
        </div>
      </div>
      <div  class="LQ_in_deptdataClass">
          <a>冷却回水</a><br>
          <a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.coolDownRetTemp1
        : tname.search('2') >= 0
        ? modbusScrewMachine.coolDownRetTemp2
        : tname.search('3') >= 0
        ? modbusScrewMachine.coolDownRetTemp3
        : undefined) +
      `℃</a>
      </div>
         
      <div  class="LQ_out_deptdataClass">
          <a>冷却出水</a><br>
          <a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.coolDownOutTemp1
        : tname.search('2') >= 0
        ? modbusScrewMachine.coolDownOutTemp2
        : tname.search('3') >= 0
        ? modbusScrewMachine.coolDownOutTemp3
        : undefined) +
      `℃</a>
      </div>
         
      <div class="LD_in_deptdataClass">
          <a>冷冻回水</a>
          <a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.freezingRetTemp1
        : tname.search('2') >= 0
        ? modbusScrewMachine.freezingRetTemp2
        : tname.search('3') >= 0
        ? modbusScrewMachine.freezingRetTemp3
        : undefined) +
      `℃</a>
      </div>
      <div class="LD_out_deptdataClass">
          <a>冷冻出水</a>
          <a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.freezingOutTemp1
        : tname.search('2') >= 0
        ? modbusScrewMachine.freezingOutTemp2
        : tname.search('3') >= 0
        ? modbusScrewMachine.freezingOutTemp3
        : undefined) +
      `℃</a>
     
      </div>
      <img id="luoganji-close"   class="luoganji-close"   title="退出" src="./img/luoganji/1.png"/>	 </div>
     `
  )
  document.getElementById('ktname').innerHTML = tname
  $('#luoganji-close').click(function () {
    Deptlabel.style.visibility = 'hidden'
  })
  CSS3DDeptlabel.position.copy(HavingChooseMesh.getWorldPosition())
  CSS3DDeptlabel.scale.set(2, 2, 2)
  CSS3DDeptlabel.position.y += 400
  CSS3DDeptlabel.element.style.visibility = 'visible'
}

function showmessaeg(name, jsonname, tname, HavingChooseMesh) {
  $.changeurl(name, jsonname)
  $.AddData()
  // console.log(modbusScrewMachine)
  $('#AHU').html('')
  $('#AHU').append(
    `
  <div class="AHU_outerClass"> 
			<div   id="ktname" class="AHU_name">AHU` +
      name.slice(-1) +
      `</div>
			<div class="dataclass">
				
				<div class="dataclass_value">加温器开度：<a class = "AHU_dataclass_value">` +
      modbusScrewMachine.heaterOpen +
      `</a>%</div>
				<div class="dataclass_value">主加热开度：<a class = "AHU_dataclass_value">` +
      modbusScrewMachine.mainHeatingOpen +
      `</a>%</div>
				<div class="dataclass_value">三通阀开度：<a class = "AHU_dataclass_value">` +
      modbusScrewMachine.threeValveOpen +
      `</a>%</div>
				<div class="dataclass_value">二次回风阀：<a class = "AHU_dataclass_value">` +
      (modbusScrewMachine.secReturnAirValveOpen == undefined
        ? '无'
        : modbusScrewMachine.secReturnAirValveOpen) +
      `</a>%</div>
			</div>
      <div class="AHU_SD">` +
      modbusScrewMachine.airSupplyHumidity +
      `<a class="AHU_unit">%</a></div>
			<div class="AHU_WD">` +
      modbusScrewMachine.airSupplyTemp +
      `<a class="AHU_unit">℃</a></div>
			<div class="AHU_PL">` +
      modbusScrewMachine.blowerFrequency +
      `<a class="AHU_unit">HZ</a></div>
			<div class="AHU_CMH">` +
      modbusScrewMachine.airSupplyAmount +
      `<a class="AHU_unit">CMH</a></div>
			<img class="imgclass" src="./img/Fj.png"/>
			
			<a class="AHU_SFJ" >送风机</a><br />
			
      <img class="AHU_STAUS_imgclass" src="./img/黄.png"/>
			<div  class="AHU_wjzT">风机状态:<a class = "AHU_value">` +
      (modbusScrewMachine.fanStatus == 1 ? '开' : '关') +
      `</a></div>

      <img class="AHU_module_imgclass" src="./img/AHU2蓝.png"/>
			<div  class="AHU_WJMS">风机模式:<a class="AHU_satus">` +
      (modbusScrewMachine.heatingStatus == 1
        ? '制热'
        : modbusScrewMachine.refrigerationStatus == 1
        ? '制冷'
        : '无') +
      '   ' +
      (modbusScrewMachine.dehumidificationStatus == 1
        ? '除湿'
        : modbusScrewMachine.humidificationStatus == 1
        ? '加湿'
        : '无') +
      `</a></div>
			<div class="AHU_Time"  >运行时间:<a class = "AHU_value">` +
      modbusScrewMachine.runDay +
      `天` +
      modbusScrewMachine.runHour +
      `时` +
      modbusScrewMachine.runMin +
      `分` +
      modbusScrewMachine.runSec +
      `秒` +
      `</a></div>

      <img  id="LQT_out"  class="AHU_loginout"    src = "../img/LQT/8.181.png">
		</div>
  
  `
  )

  $('#LQT_out').click(function () {
    Deptlabel.style.visibility = 'hidden'
  })
  document.getElementById('ktname').innerHTML = tname

  CSS3DDeptlabel.position.copy(HavingChooseMesh.getWorldPosition())
  CSS3DDeptlabel.scale.set(2, 2, 2)
  CSS3DDeptlabel.position.y += 400
  CSS3DDeptlabel.element.style.visibility = 'visible'
}
function showLQTmessaeg(name, jsonname, tname, HavingChooseMesh) {
  $.changeurl(name, jsonname)
  $.AddData()
  // console.log(modbusScrewMachine)
  $('#AHU').html('')
  $('#AHU').append(
    `<div class="LQT_out">
		<img  class="LQT_img" src="./img/LQT/冷却塔机组.png"/>
		<div id = "ktname" class="LQT_Name"> 冷却塔01  </div>
			<div  class="LQT_FS">风扇状态<br /><a>` +
      ((tname.search('1') >= 0
        ? modbusScrewMachine.coolFanStatus1
        : tname.search('2') >= 0
        ? modbusScrewMachine.coolFanStatus2
        : tname.search('3') >= 0
        ? modbusScrewMachine.coolFanStatus3
        : undefined) == 1
        ? '开'
        : '关') +
      `</a> </div>
			<img  class="LQT_SLL_img" src="./img/LQT/2.png"/>
			<div class="LQT_SLL">水流量 <br /><a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.ehFlow1
        : tname.search('2') >= 0
        ? modbusScrewMachine.ehFlow2
        : tname.search('3') >= 0
        ? modbusScrewMachine.ehFlow3
        : undefined) +
      `</a></div>
				<img  class="LQT_PL_img" src="./img/LQT/3.png"/>
			<div class="LQT_PL">冷却泵频率 <br /><a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.coolPumpHzFeedback1
        : tname.search('2') >= 0
        ? modbusScrewMachine.coolPumpHzFeedback2
        : tname.search('3') >= 0
        ? modbusScrewMachine.coolPumpHzFeedback3
        : undefined) +
      `</a></div>
		<img  class="LQT_ZHL_img" src="./img/LQT/1.png"/>
			<div class="LQT_ZHL">总耗能 <br /><a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.ehTotalEnergy1
        : tname.search('2') >= 0
        ? modbusScrewMachine.ehTotalEnergy2
        : tname.search('3') >= 0
        ? modbusScrewMachine.ehTotalEnergy3
        : undefined) +
      `</a></div>
			
			<div style="position: absolute;left: 300px;top: 195px;">EH进水<br /><a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.ehInWaterTemp1
        : tname.search('2') >= 0
        ? modbusScrewMachine.ehInWaterTemp2
        : tname.search('3') >= 0
        ? modbusScrewMachine.ehInWaterTemp3
        : undefined) +
      `℃</a></div>
			<div style="position: absolute;left: 300px;top: 240px;">EH出水<br /><a>` +
      (tname.search('1') >= 0
        ? modbusScrewMachine.ehOutWaterTemp1
        : tname.search('2') >= 0
        ? modbusScrewMachine.ehOutWaterTemp2
        : tname.search('3') >= 0
        ? modbusScrewMachine.ehOutWaterTemp3
        : undefined) +
      `℃</a></div>
			

      <div class="LQT_data">
      <div class="LQT_data_base"><a>冷却系统流量：<a>` +
      modbusScrewMachine.coolSysFlow +
      `P</a></a>
      <div class="LQT_data_base_1"> 系统出水压力：<a>` +
      modbusScrewMachine.coolSysOutletPress +
      `P</a></div></div>
      <div class="LQT_data_base"> <a> 冷却供水温度：<a>` +
      modbusScrewMachine.coolSupWaterTemp +
      `℃</a></a>
      <div class="LQT_data_base_1"> 冷却回水温度：<a>` +
      modbusScrewMachine.coolRetWaterTemp +
      `℃</a></div></div>
      <div class="LQT_data_base"> <a> 冷冻供水温度：<a>` +
      modbusScrewMachine.freezingSupWaterTemp +
      `℃</a></a>
      <div class="LQT_data_base_1"> 冷冻回水温度：<a>` +
      modbusScrewMachine.freezingRetWaterTemp +
      `℃</a></div></div>
    </div>
    <img  id="LQT_out"  class="LQT_loginout"    src = "./img/LQT/8.181.png">

		</div>`
  )

  $('#LQT_out').click(function () {
    Deptlabel.style.visibility = 'hidden'
  })

  document.getElementById('ktname').innerHTML = tname

  CSS3DDeptlabel.position.copy(HavingChooseMesh.getWorldPosition())
  CSS3DDeptlabel.scale.set(2, 2, 2)
  CSS3DDeptlabel.position.y += 400
  CSS3DDeptlabel.element.style.visibility = 'visible'
}
function showGYSWJmessaeg(name, jsonname, tname, HavingChooseMesh) {
  $.changeurl(name, jsonname)
  $.AddData()
  // console.log(modbusScrewMachine)
  $('#AHU').html('')
  $('#AHU').append(
    `
    <div class="GYSWJ_outerClass"> 
			<div id="ktname"  class="GYSWJ_name">工艺水外机</div>
			<div class="GYSWJ_dataclass">
				<div class="GYSWJ_dataclass_class">系统回水温度：<a >` +
      modbusScrewMachine.sysRetWaterTemp +
      `℃</a></div>
				<div class="GYSWJ_dataclass_class">系统出水温度：<a>` +
      modbusScrewMachine.sysOutWaterTemp +
      `℃</a></div>
				<div class="GYSWJ_dataclass_class">EH进水温度：<a>` +
      modbusScrewMachine.ehInWaterTemp +
      `℃</a></div>
				<div class="GYSWJ_dataclass_class">EH出水温度：<a>` +
      modbusScrewMachine.ehOutWaterTemp +
      `℃</a></div>
				<div class="GYSWJ_dataclass_class">系统输出载荷：<a>` +
      modbusScrewMachine.outputLoad +
      `%</a></div>
				<div class="GYSWJ_dataclass_class">EH总能耗：<a>` +
      modbusScrewMachine.ehTotalEnergy +
      `</a></div>
			</div>
			<img class="GYSWJ_imgclass" src="./img/cb230b72c42a4858819216195b08ec34.png"/>
			
			<a class="GYSWJ_SFJ" ></a><br />
			<img class="GYSWJ_SjzT_imgclass" src="./img/黄.png"/>
			<a  class="GYSWJ_SjzT">水机状态:` +
      (modbusScrewMachine.waterplaneStatus == 1 ? '开' : '关') +
      `</a>
      <img class="GYSWJ_YCB_imgclass" src="./img/工艺蓝.png"/>
			<a  class="GYSWJ_YCB">一次泵状态:` +
      (modbusScrewMachine.onePumpStatus == 1 ? '开' : '关') +
      `</a>
			<div class="GYSWJ_Time">运行时间:<a>` +
      modbusScrewMachine.runDay +
      `天` +
      modbusScrewMachine.runHour +
      `时` +
      `</a></div>
      <img  id="LQT_out"  class="GYSWJ_loginout"    src = "./img/LQT/8.181.png">
		</div>
    `
  )

  $('#LQT_out').click(function () {
    Deptlabel.style.visibility = 'hidden'
  })

  document.getElementById('ktname').innerHTML = tname

  CSS3DDeptlabel.position.copy(HavingChooseMesh.getWorldPosition())
  CSS3DDeptlabel.scale.set(2, 2, 2)
  CSS3DDeptlabel.position.y += 400
  CSS3DDeptlabel.element.style.visibility = 'visible'
}

export { finalComposer, bloomComposer }
